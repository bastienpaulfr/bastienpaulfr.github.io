"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[228],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(r),m=a,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5838:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},assets:function(){return p},toc:function(){return u},default:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],c={title:"Prot\xe9ger les classes contre la copie ou l\u2019assignation en C++",date:new Date("2014-08-14T13:02:46.000Z"),draft:!1},s=void 0,l={permalink:"/blog/assignation-protect",editUrl:"https://github.com/bastienpaulfr/bastienpaulfr.github.io/edit/master/website/blog/blog/assignation-protect.md",source:"@site/blog/assignation-protect.md",title:"Prot\xe9ger les classes contre la copie ou l\u2019assignation en C++",description:"Pour prot\xe9ger les classes contre la copie, il suffit de d\xe9clarer le constructeurs de copie en private. Une macro peut \xeatre d\xe9finie car le principe est le m\xeame pour toutes les classes.",date:"2014-08-14T13:02:46.000Z",formattedDate:"August 14, 2014",tags:[],readingTime:.335,truncated:!1,authors:[],prevItem:{title:"Android : Cr\xe9er un fichier keystore (jks) \xe0 partir d\u2019une cl\xe9 (.pk8) et d\u2019un certificat (.pem)",permalink:"/blog/from-pk8-to-jks"},nextItem:{title:"Assert Statique",permalink:"/blog/static-assert"}},p={authorsImageUrls:[]},u=[],f={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Pour prot\xe9ger les classes contre la copie, il suffit de d\xe9clarer le constructeurs de copie en ",(0,o.kt)("inlineCode",{parentName:"p"},"private"),". Une macro peut \xeatre d\xe9finie car le principe est le m\xeame pour toutes les classes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"#define DECLARE_NO_COPY_CLASS(classname)  \n    private:                              \n        classname(const classname&);\n#endif\n")),(0,o.kt)("p",null,"De m\xeame pour les prot\xe9ger contre l\u2019assignation, on peut d\xe9clarer la surcharge de l\u2019op\xe9rateur ",(0,o.kt)("inlineCode",{parentName:"p"},"=")," comme \xe9tant ",(0,o.kt)("inlineCode",{parentName:"p"},"private"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"#define DECLARE_NO_ASSIGN_CLASS(classname)  \n    private:                                \n        classname& operator=(const classname&);\n#endif\n")))}m.isMDXComponent=!0}}]);