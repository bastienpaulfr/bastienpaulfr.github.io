"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[916],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=i,g=d["".concat(s,".").concat(u)]||d[u]||c[u]||a;return n?r.createElement(g,o(o({ref:t},m),{},{components:n})):r.createElement(g,o({ref:t},m))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6893:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return m},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:1},s="Treessence",p={unversionedId:"treessence/index",id:"treessence/index",isDocsHomePage:!1,title:"Treessence",description:"Release",source:"@site/docs/treessence/index.md",sourceDirName:"treessence",slug:"/treessence/index",permalink:"/docs/treessence/index",editUrl:"https://github.com/bastienpaulfr/bastienpaulfr.github.io/edit/master/docs/docs/treessence/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"treessenceSidebar"},m=[{value:"Set up",id:"set-up",children:[{value:"Usage",id:"usage",children:[]}]},{value:"Essences of tree",id:"essences-of-tree",children:[{value:"Console",id:"console",children:[]},{value:"File Logging",id:"file-logging",children:[]},{value:"Crash reporting",id:"crash-reporting",children:[]},{value:"Custom formatting",id:"custom-formatting",children:[]}]},{value:"DSL",id:"dsl",children:[{value:"Starting Timber",id:"starting-timber",children:[]},{value:"Adding trees",id:"adding-trees",children:[]},{value:"Uproot all trees",id:"uproot-all-trees",children:[]}]},{value:"Licence",id:"licence",children:[]}],c={toc:m};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"treessence"},"Treessence"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://jitpack.io/#bastienpaulfr/Treessence"},(0,a.kt)("img",{parentName:"a",src:"https://jitpack.io/v/bastienpaulfr/Treessence.svg",alt:"Release"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://travis-ci.org/bastienpaulfr/Treessence"},(0,a.kt)("img",{parentName:"a",src:"https://travis-ci.org/bastienpaulfr/Treessence.svg?branch=master",alt:"Build Status"}))),(0,a.kt)("p",null,"Some trees for Timber lib"),(0,a.kt)("h2",{id:"set-up"},"Set up"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"build.gradle")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"repositories {\n    jcenter()\n    maven { url \"https://jitpack.io\" }\n}\n\ndependencies {\n    //Treessence does not include Timber\n    implementation 'com.jakewharton.timber:timber:4.7.1'\n    implementation 'com.github.bastienpaulfr:Treessence:1.0.0'\n}\n")),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Checkout ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/JakeWharton/timber"},"Timber")),(0,a.kt)("li",{parentName:"ol"},"Add any trees you like")),(0,a.kt)("h2",{id:"essences-of-tree"},"Essences of tree"),(0,a.kt)("h3",{id:"console"},"Console"),(0,a.kt)("h4",{id:"throwerrortree"},"ThrowErrorTree"),(0,a.kt)("p",null,"An implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"Timber.Tree")," which throws ",(0,a.kt)("inlineCode",{parentName:"p"},"Error")," when priority of\nlog is exceeded the limit. Useful for development or test environment."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Will throw an error if Timber.e() is used\nTimber.plant(new ThrowErrorTree(Log.ERROR));\n")),(0,a.kt)("h4",{id:"systemlogtree"},"SystemLogTree"),(0,a.kt)("p",null,"An implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"Timber.Tree")," which logs into ",(0,a.kt)("inlineCode",{parentName:"p"},"System.out")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Timber.plant(new SystemLogTree());\n")),(0,a.kt)("h3",{id:"file-logging"},"File Logging"),(0,a.kt)("h4",{id:"fileloggertree"},"FileLoggerTree"),(0,a.kt)("p",null,"An implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"Timber.Tree")," which sends log into a circular file.\n",(0,a.kt)("inlineCode",{parentName:"p"},"java.util.logging.Logger")," is used for logging"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'Tree t = new FileLoggerTree.Builder()\n                     .withFileName("file%g.log")\n                     .withDirName("my/dir")\n                     .withSizeLimit(20000)\n                     .withFileLimit(3)\n                     .withMinPriority(Log.DEBUG)\n                     .appendToFile(true)\n                     .build();\nTimber.plant(t);\n')),(0,a.kt)("h3",{id:"crash-reporting"},"Crash reporting"),(0,a.kt)("h4",{id:"sentrybreadcrumbtree"},"SentryBreadcrumbTree"),(0,a.kt)("p",null,"An implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"Timber.Tree")," which stores breadcrumb to Sentry instance. Breadcrumbs are then sent with an event."),(0,a.kt)("p",null,"You need to add sentry dependency to use this tree."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Timber.plant(new SentryBreadcrumbTree(Log.DEBUG));\n")),(0,a.kt)("h4",{id:"sentryeventtree"},"SentryEventTree"),(0,a.kt)("p",null,"An implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"Timber.Tree")," which sends Sentry events. It is useful for sending errors or logs that are not coming so often.\nOtherwise your sentry instance will be flooded !"),(0,a.kt)("p",null,"You need to add sentry dependency to use this tree."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Timber.plant(new SentryEventTree(Log.ERROR));\n")),(0,a.kt)("p",null,"You can also add a filter for SentryEvent"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// This will send an event to Sentry only if priority exceeds "ERROR" level and class name starts with "Sentry"\nTagFilter filter = new TagFilter("Sentry.*");\nSentryEventTree tree = new SentryEventTree(Log.INFO, filter);\nTimber.plant(tree);\n')),(0,a.kt)("h3",{id:"custom-formatting"},"Custom formatting"),(0,a.kt)("p",null,"It is possible to use a custom formatter with trees."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"SystemLogTree tree = new SystemLogTree(Log.VERBOSE, NoFilter.INSTANCE, LogcatFormatter.INSTANCE);\n")),(0,a.kt)("p",null,"For timezone issue, a custom timezone can be set"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// Create object that will provide timestamp string\nTimeStamper timeStamper = new TimeStamper("MM-dd HH:mm:ss:SSS", TimeZone.getTimeZone("GMT+2"))\n// Set time stamper to LogcatFormatter\nLogcatFormatter.INSTANCE.setTimeStamper(timeStamper);\n// Formatter can be set to a Tree\n[...]\n')),(0,a.kt)("h2",{id:"dsl"},"DSL"),(0,a.kt)("p",null,"Since version 1.0, there is a Kotlin dsl to configure Timber in Applications"),(0,a.kt)("h3",{id:"starting-timber"},"Starting Timber"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"//Create a TimberApplication to configure Timber.\nstartTimber {\n\n}\n\n")),(0,a.kt)("h3",{id:"adding-trees"},"Adding trees"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'startTimber {\n    // Add a Timber.DebugTree\n    debugTree()\n\n\n    // Add a Tree that log only from Log.INFO level\n    releaseTree()\n\n    // Add a simple tree with a filter and a formatter\n    tree(\n        { s: String, t: Throwable? ->\n        // Log goes through this method and it is up to you to write those where you want\n        }\n    ) {\n        level = Log.INFO\n\n        filter(NoFilter())\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n\n    // Add a Tree that log into logcat\n    logcatTree {\n        level = Log.INFO\n\n        filter(NoFilter())\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n\n    // Add a tree that log into a file\n    fileTree {\n        level = Log.INFO\n        fileName = "myfile"\n        dir = temporaryFolder.newFolder().absolutePath\n        sizeLimit = 10\n        fileLimit = 1\n        appendToFile = true\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n\n    // Add a tree that log using System.out.print()\n    systemTree {\n        level = Log.INFO\n\n        filter(NoFilter())\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n\n    // Add a tree that is throwing an exception when Timber.e() is called\n    throwErrorTree {\n        level = Log.INFO\n\n        filter(NoFilter())\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n\n    // Add a tree that put breadcrumb into Sentry API\n    sentryBreadCrumbTree {\n        level = Log.VERBOSE\n\n        filter(TagFilter("^(?!.*(Sentry|App)).*"))\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n\n    // Add a tree that sends an event to sentry on each log.\n    sentryEventTree {\n        level = Log.ERROR\n\n        filter(TagFilter("^(?!.*(Sentry|App)).*"))\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n\n    // Add a tree that is logging into a TextView\n    textViewTree {\n        level = Log.INFO\n        append = true\n\n        filter(NoFilter())\n\n        filter { prio, tag, m, t ->\n            false\n        }\n\n        formatter { prio, tag, message ->\n            ""\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"uproot-all-trees"},"Uproot all trees"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"stopTimber()\n")),(0,a.kt)("h2",{id:"licence"},"Licence"),(0,a.kt)("p",null,"   Copyright ","[2017]"," Bastien PAUL"),(0,a.kt)("p",null,'   Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"   http://www.apache.org/licenses/LICENSE-2.0\n")),(0,a.kt)("p",null,'   Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.'))}d.isMDXComponent=!0}}]);