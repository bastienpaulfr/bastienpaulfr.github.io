"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[562],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),f=a,g=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5529:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={sidebar_position:1},l="AndroidCountries",c={unversionedId:"countries/index",id:"countries/index",isDocsHomePage:!1,title:"AndroidCountries",description:"Download",source:"@site/docs/countries/index.md",sourceDirName:"countries",slug:"/countries/index",permalink:"/docs/countries/index",editUrl:"https://github.com/bastienpaulfr/bastienpaulfr.github.io/edit/master/docs/docs/countries/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"countriesSidebar"},u=[{value:"Set Up",id:"set-up",children:[{value:"For country data",id:"for-country-data",children:[]},{value:"For flag resources",id:"for-flag-resources",children:[]}]},{value:"Presentation",id:"presentation",children:[{value:"Country data",id:"country-data",children:[]},{value:"Flags",id:"flags",children:[]},{value:"Logs",id:"logs",children:[]}]},{value:"License",id:"license",children:[{value:"Flag pictures",id:"flag-pictures",children:[]},{value:"Code",id:"code",children:[]}]}],p={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"androidcountries"},"AndroidCountries"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://jitpack.io/#bastienpaulfr/AndroidCountries"},(0,o.kt)("img",{parentName:"a",src:"https://jitpack.io/v/bastienpaulfr/AndroidCountries.svg",alt:"Download"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://travis-ci.org/bastienpaulfr/AndroidCountries"},(0,o.kt)("img",{parentName:"a",src:"https://travis-ci.org/bastienpaulfr/AndroidCountries.svg?branch=master",alt:"Build Status"}))),(0,o.kt)("p",null,"Countries resources for Android"),(0,o.kt)("h2",{id:"set-up"},"Set Up"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"repositories {\n    maven { url 'https://jitpack.io' }\n}\n")),(0,o.kt)("h3",{id:"for-country-data"},"For country data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    implementation 'com.github.bastienpaulfr.AndroidCountries:countries:0.1.4'\n}\n")),(0,o.kt)("h3",{id:"for-flag-resources"},"For flag resources"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    implementation 'com.github.bastienpaulfr.AndroidCountries:flags:0.1.4'\n}\n")),(0,o.kt)("h2",{id:"presentation"},"Presentation"),(0,o.kt)("h3",{id:"country-data"},"Country data"),(0,o.kt)("p",null,"Data is gotten from ",(0,o.kt)("a",{parentName:"p",href:"https://restcountries.eu/"},"https://restcountries.eu/")),(0,o.kt)("p",null,"Data is stored in a json file. This file is parsed during the first access to data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'// Create a countryManager\nval countryManager = CountryManager(context) // Context is used for accessing to raw resource where json file is stored.\n\n// getting the full list of countries\nval countries: Collection<Country> = countryManager.countries\n\n// Getting a country by name\nval france: Country = countryManager.countryByName["France"]\n\n//Getting a country vy alpha3 code\nval france: Country = countryManager.countryByAlpha3Code["FRA"]\n\n//Getting a country vy alpha2 code\nval france: Country = countryManager.countryByAlpha2Code["FR"]\n\n')),(0,o.kt)("h3",{id:"flags"},"Flags"),(0,o.kt)("p",null,'The flags are named by their 2-letter ISO-3166 country code, except for the\nconstituent countries of Great Britain which have 6-letter codes "GB-ENG" etc).'),(0,o.kt)("p",null,"Kosovo uses the user-assigned country code ",(0,o.kt)("inlineCode",{parentName:"p"},"XK"),", which is not part of the ISO standard, but in use by several multinational organizations."),(0,o.kt)("p",null,"Flags are standard resources. Name of resource is ",(0,o.kt)("inlineCode",{parentName:"p"},"ic_{2-letter ISO-3166 country code}")),(0,o.kt)("p",null,"For example :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"val resId = R.drawable.ic_fr\n")),(0,o.kt)("p",null,"SVG counterpart of drawable resource is in ",(0,o.kt)("inlineCode",{parentName:"p"},"data/svg")," folder"),(0,o.kt)("h3",{id:"logs"},"Logs"),(0,o.kt)("p",null,"This library uses ",(0,o.kt)("a",{parentName:"p",href:"http://www.slf4j.org/"},"SLF4J")," for logging. Please use android binding to\nlog into logcat. More info on ",(0,o.kt)("a",{parentName:"p",href:"http://www.slf4j.org/android/"},"Android binding")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    // https://mvnrepository.com/artifact/org.slf4j/slf4j-android\n    implementation 'org.slf4j:slf4j-android:1.7.30'\n}\n")),(0,o.kt)("p",null,"You can also bind SLF4J to timber. In this case please use this dependency"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    implementation 'com.arcao:slf4j-timber:3.1'\n}\n")),(0,o.kt)("p",null,"To activate verbose logging, please add this into your code :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"LogDefines.setVerbose(true);\n")),(0,o.kt)("p",null,"Sometimes, it can have log for profiling, in this case, to activate them please add\nthis in code :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"LogDefines.setProfile(true);\n")),(0,o.kt)("p",null,"One ",(0,o.kt)("inlineCode",{parentName:"p"},"TAG")," is used for all logging from lib : ",(0,o.kt)("inlineCode",{parentName:"p"},"AndroidCountries"),". It would be easy to filter on this tag if you\nwant to disable all logging from lib. Filtering can be done with ",(0,o.kt)("inlineCode",{parentName:"p"},"Timber")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"Tree"),"\nfrom ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bastienpaulfr/Treessence"},"Treessence")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    implementation 'com.github.bastienpaulfr:Treessence:1.0.5'\n}\n")),(0,o.kt)("h2",{id:"license"},"License"),(0,o.kt)("h3",{id:"flag-pictures"},"Flag pictures"),(0,o.kt)("p",null,"The source files were taken from Wikipedia and are not under copyright\nprotection since flags are effectively in public domain."),(0,o.kt)("h3",{id:"code"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Copyright (C) 2020 Bastien Paul\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n')))}d.isMDXComponent=!0}}]);